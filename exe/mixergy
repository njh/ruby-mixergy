#!/usr/bin/env ruby

# frozen_string_literal: true

$LOAD_PATH.unshift File.expand_path("../lib", __dir__)

require "thor"
require "mixergy"
require "io/console"

module Mixergy
  class CLI < Thor
    # Exit with a non-zero status code on failure
    def self.exit_on_failure?
      true
    end

    desc "version", "Prints the Mixergy gem version"
    def version
      puts Mixergy::VERSION
    end

    desc "login", "Login to Mixergy API and store token"
    option :username, aliases: "-u", desc: "Username"
    option :password, aliases: "-p", desc: "Password"
    def login
      username = options[:username] || prompt_for_username
      password = options[:password] || prompt_for_password
      client = Mixergy::Client.new
      token = client.login(username, password)
      if token
        puts "Login successful!"
        config = Mixergy::Config.new
        puts "Writing token to #{config.filepath}"
        config.load
        config[:token] = token
        if !config[:default_tank_id]
          tank_id = client.tanks.first&.id
          if tank_id
            puts "Setting default tank ID to #{tank_id}"
            config[:default_tank_id] = tank_id
          end
        end
        config.save
      end
    end

    desc "tanks", "List all your tanks"
    def tanks
      client = Mixergy::Client.new
      client.load_config
      tanks = client.tanks
      if tanks.empty?
        puts "No tanks found."
      else
        tanks.each do |tank|
          puts "Serial: #{tank.serial_number}"
          puts "Id: #{tank.id}"
          puts
        end
      end
    end

    private

    def prompt_for_username
      print "Username: "
      STDIN.gets.chomp
    end

    def prompt_for_password
      print "Password: "
      password = STDIN.noecho(&:gets)
      puts
      password.chomp
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  Mixergy::CLI.start(ARGV)
end
